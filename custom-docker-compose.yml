version: '3'

services:
  # The main dashboard application
  dashboard:
    build: ./frontend
    container_name: container-dashboard
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - dashboard-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.localhost`)"
      - "traefik.http.routers.dashboard.entrypoints=web"

  # Backend API service for container management
  api:
    build: ./backend
    container_name: container-api
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NODE_ENV=production
    ports:
      - "3001:3001"
    networks:
      - dashboard-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.dashboard.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"

  # Traefik for routing and load balancing
  traefik:
    image: traefik:v2.9
    container_name: traefik
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - dashboard-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.service=api@internal"

networks:
  dashboard-network:
    driver: bridge
